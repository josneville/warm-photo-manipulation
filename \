/*
 * =====================================================================================
 *
 *       Filename:  image.cpp
 *
 *    Description:  The image class is a subclass of the PNG class. This is it's CPP file.
 *
 *        Version:  1.0
 *        Created:  01/29/2014 09:19:11 AM
 *       Revision:  none
 *       Compiler:  gcc
 *
 *         Author:  Dr. Fritz Mehner (mn), mehner@fhswf.de
 *        Company:  FH SÃ¼dwestfalen, Iserlohn
 *
 * =====================================================================================
 */

#include "image.h"
#include <iostream>
using namespace std;
void Image::discoverStations()
{	
	RGBAPixel black;
	black.red = 10;
	black.green = 10;
	black.blue = 10;
	RGBAPixel white;
	white.red = 255;
	white.green = 255;
	white.blue = 255;
	RGBAPixel temp;
	temp.red = 255;
	temp.green = 0;
	temp.blue = 0;
	for(size_t y = 0; y < height(); y++)
	{
		for (size_t x = 0; x < width(); x++)
		{

			if (black < *this->operator()(x,y))
			{
				*this->operator()(x,y) = white;
			}
			else
			{
				if (*this->operator()(x+3, y) < black && *this->operator()(x-3,y) < black && *this->operator()(x,y+3) < black && *this->operator()(x,y-3) < black && *this->operator()(x+2,y+2) < black && *this->operator()(x+2,y-2) < black && *this->operator()(x-2,y+2) < black && *this->operator()(x-2,y-2) < black)
				{
					*this->operator()(x,y) = temp;
				} 
			}
		}	
	}
	for(size_t y = 0; y < height(); y++)
	{
		for(size_t x = 0; x < width(); x++)
		{
			if(*this->operator()(x,y) == temp)
			{
				for(int i = -3; i < 4; i++)
				{
					for(int j = -3; j < 4; j++)
					{
						if (i != 0 || j != 0)
						{
							*this->operator()(x+i,y+j) = black;
						}
					}	
				}
				
			}
		}
	}	
}

void Image::updateCoords()
{
	discoverStations();	
	max = stationCount();
	xCoords = new int[max];
	yCoords = new int[max];
	RGBAPixel temp;
	temp.red = 255;
	temp.green = 0;
	temp.blue = 0;
	int counter = 0;
	for (size_t x = 0; x < width(); x++)
	{
		for (size_t y = 0; y < height(); y++)
		{
			if(*this->operator()(x,y) == temp)
			{
				xCoords[counter] = x;
				yCoords[counter] = y;
				counter++;
			}
		}
	}
}

int Image::stationCount()
{
	
	int counter =  0;
	RGBAPixel temp;
	temp.red = 255;
	temp.green = 0;
	temp.blue = 0;
	for(size_t y = 0; y < height(); y++)
	{
		for (size_t x = 0; x < width(); x++)
		{
			if (*this->operator()(x,y) == temp) counter++;
		}	
	}
	return counter;
}

void Image::printBox(int x, int y)
{
	RGBAPixel temp;
	temp.red = 128;
	temp.green = 128;
	temp.blue = 128;
	size_t w = 55; 
	size_t h = 51;
	for (size_t q = x; q<x+w; q++)
	{
		for (size_t r = y; r < y+h; r++)
		{
			*this->operator()(q,r) = temp;
		}
	}
}

bool Image::checkBox(int x, int y)
{
	RGBAPixel temp;
	temp.red = 128;
	temp.green = 128;
	temp.blue = 128;
	RGBAPixel black;
	black.red = 10;
	black.green = 10;
	black.blue = 10;
	size_t w = 55;
	size_t h = 51;
	for (size_t q = x; q<x+w; q++)
	{
		for (size_t r = y; r < y+h; r++)
		{
			if (*this->operator()(q,r) == temp) return true;
			if (*this->operator()(q,r) < black) return true;
		}
	}
	return false;
}

void Image::finalMap()
{
	
}
